{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ninaloeterman/ITC/ITC Hackathon 2020/SpendWell/App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useEffect, useState } from \"react\";\nimport * as React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport Constants from \"expo-constants\";\nimport * as Permissions from \"expo-permissions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-modal\";\nimport Spinner from 'react-native-loading-spinner-overlay';\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isModalVisible = _useState4[0],\n      setIsModalVisible = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      spinner = _useState6[0],\n      setSpinner = _useState6[1];\n\n  useEffect(function () {\n    getPermissionAsync();\n  }, []);\n\n  var getPermissionAsync = function getPermissionAsync() {\n    var _await$Permissions$as, status;\n\n    return _regeneratorRuntime.async(function getPermissionAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!Constants.platform.ios) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n          case 3:\n            _await$Permissions$as = _context.sent;\n            status = _await$Permissions$as.status;\n\n            if (status !== \"granted\") {\n              alert(\"Sorry, we need camera roll permissions to make this work!\");\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _pickImage = function _pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function _pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 3:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n              toggleModal();\n            }\n\n            console.log(result);\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var handlePress = function handlePress() {\n    alert(\"Leigh's change!\");\n  };\n\n  var toggleModal = function toggleModal() {\n    setIsModalVisible(!isModalVisible);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Open up App.js to start working on your app!\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"And have a lot of fun!\"), React.createElement(Button, {\n    onPress: function onPress() {\n      return handlePress();\n    },\n    title: \"click me\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Show modal\",\n    onPress: toggleModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), React.createElement(Modal, {\n    isVisible: isModalVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(Spinner, {\n    visible: spinner,\n    textContent: 'Loading healthier products:)',\n    textStyle: styles.spinnerTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.modalContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"I am the modal content!\"), React.createElement(Button, {\n    title: \"Hide modal\",\n    onPress: toggleModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }))), image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 200,\n      height: 200\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Pick an image from camera roll\",\n    onPress: _pickImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#ECEFF4\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  modalContent: {\n    backgroundColor: \"white\",\n    height: \"90%\"\n  }\n});","map":{"version":3,"sources":["/Users/ninaloeterman/ITC/ITC Hackathon 2020/SpendWell/App.js"],"names":["StatusBar","useEffect","useState","React","ImagePicker","Constants","Permissions","Modal","Spinner","App","image","setImage","isModalVisible","setIsModalVisible","spinner","setSpinner","getPermissionAsync","platform","ios","askAsync","CAMERA_ROLL","status","alert","_pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uri","toggleModal","console","log","handlePress","styles","container","flex","spinnerTextStyle","modalContent","width","height","StyleSheet","create","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { useEffect, useState } from \"react\";\nimport * as React from \"react\";\nimport { Button, Image, View } from \"react-native\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport Constants from \"expo-constants\";\nimport * as Permissions from \"expo-permissions\";\nimport { StyleSheet, Text } from \"react-native\";\nimport Modal from \"react-native-modal\";\nimport Spinner from 'react-native-loading-spinner-overlay';\n\n\nexport default function App() {\n  const [image, setImage] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [spinner, setSpinner] = useState(false)\n\n  useEffect(() => {\n    getPermissionAsync();\n  }, []);\n\n  const getPermissionAsync = async () => {\n    if (Constants.platform.ios) {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== \"granted\") {\n        alert(\"Sorry, we need camera roll permissions to make this work!\");\n      }\n    }\n  };\n\n  const _pickImage = async () => {\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1,\n      });\n      if (!result.cancelled) {\n        setImage(result.uri);\n        toggleModal();\n      }\n\n      console.log(result);\n    } catch (E) {\n      console.log(E);\n    }\n  };\n\n  const handlePress = () => {\n    alert(\"Leigh's change!\");\n  };\n  \n  const toggleModal = () => {\n    setIsModalVisible(!isModalVisible);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text>Open up App.js to start working on your app!</Text>\n      <Text>And have a lot of fun!</Text>\n      <Button onPress={() => handlePress()} title=\"click me\" />\n      <StatusBar style=\"auto\" />\n      <Button title=\"Show modal\" onPress={toggleModal} />\n      <Modal isVisible={isModalVisible}>\n        <View style={{ flex: 1 }}>\n        <Spinner\n          visible={spinner}\n          textContent={'Loading healthier products:)'}\n          textStyle={styles.spinnerTextStyle}\n        />\n          <Text style={styles.modalContent}>I am the modal content!</Text>\n          {/* <DoubleBounce size={10} color=\"#1CAFF6\" /> */}\n\n          <Button title=\"Hide modal\" onPress={toggleModal} />\n        </View>\n      </Modal>\n      {image && (\n        <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />\n      )}\n      <Button title=\"Pick an image from camera roll\" onPress={_pickImage} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#ECEFF4\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  modalContent: {\n    backgroundColor: \"white\",\n    height: \"90%\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}