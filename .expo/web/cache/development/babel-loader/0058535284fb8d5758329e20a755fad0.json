{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/leighsteele/Desktop/ITC/WEEK 13/SpendWell/components/MainPage/MainPage.jsx\";\nimport React from 'react';\nimport { StatusBar } from \"expo-status-bar\";\nimport { useEffect, useState } from \"react\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport Constants from \"expo-constants\";\nimport * as Permissions from \"expo-permissions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-modal\";\nimport ProductsList from \"../ProductsList\";\nimport { PostBarcode } from \"../../lib/api\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\nimport Navbar from \"../Navbar/navbar\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nvar MainPage = function MainPage() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isModalVisible = _useState4[0],\n      setIsModalVisible = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      spinner = _useState6[0],\n      setSpinner = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      productsData = _useState8[0],\n      setProductsData = _useState8[1];\n\n  useEffect(function () {\n    getPermissionAsync();\n  }, []);\n\n  var getPermissionAsync = function getPermissionAsync() {\n    var _await$Permissions$as, status;\n\n    return _regeneratorRuntime.async(function getPermissionAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!Constants.platform.ios) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n          case 3:\n            _await$Permissions$as = _context.sent;\n            status = _await$Permissions$as.status;\n\n            if (status !== \"granted\") {\n              alert(\"Sorry, we need camera roll permissions to make this work!\");\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var productOne = {\n    \"barcode\": 78742432885\n  };\n  var productTwo = {\n    \"barcode\": 36800318526\n  };\n  var productThree = {\n    \"barcode\": 76983400182\n  };\n\n  var _pickImage = function _pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function _pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 3:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n              PostBarcode(productThree).then(function (res) {\n                console.log(res.data);\n                setProductsData(res.data);\n              }).catch(function (err) {\n                return console.log(\"There was a problem sending the product data\", err);\n              });\n              toggleModal();\n            }\n\n            console.log(result);\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var toggleModal = function toggleModal() {\n    setIsModalVisible(!isModalVisible);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), React.createElement(Modal, {\n    isVisible: isModalVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, React.createElement(Spinner, {\n    visible: spinner,\n    textContent: \"Loading healthier products:)\",\n    textStyle: styles.spinnerTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), React.createElement(ProductsList, {\n    productsData: productsData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    color: \"white\",\n    title: \"X\",\n    onPress: toggleModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: styles.scanningContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 200,\n      height: 200,\n      borderRadius: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), !image && React.createElement(Ionicons, {\n    name: \"ios-qr-scanner\",\n    color: \"#89db9b\",\n    size: 200,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.barcodeOuterContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.barcodeContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    onPress: _pickImage,\n    style: styles.barcodeButton,\n    name: \"ios-barcode\",\n    size: 50,\n    color: \"#14aa6b\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  })))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  modalContent: {\n    backgroundColor: \"white\",\n    height: \"90%\"\n  },\n  barcodeContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#89db9b\",\n    borderColor: \"white\",\n    borderWidth: 1,\n    borderRadius: 20,\n    width: 80,\n    height: 80\n  },\n  modalContent: {\n    backgroundColor: 'blue',\n    height: '90%'\n  },\n  scanningContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    flex: 1,\n    marginBottom: 20,\n    marginTop: 50\n  }\n});\nexport default MainPage;","map":{"version":3,"sources":["/Users/leighsteele/Desktop/ITC/WEEK 13/SpendWell/components/MainPage/MainPage.jsx"],"names":["React","StatusBar","useEffect","useState","ImagePicker","Constants","Permissions","Modal","ProductsList","PostBarcode","Spinner","Navbar","Ionicons","MainPage","image","setImage","isModalVisible","setIsModalVisible","spinner","setSpinner","productsData","setProductsData","getPermissionAsync","platform","ios","askAsync","CAMERA_ROLL","status","alert","productOne","productTwo","productThree","_pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uri","then","res","console","log","data","catch","err","toggleModal","styles","container","flex","spinnerTextStyle","scanningContainer","width","height","borderRadius","barcodeOuterContainer","barcodeContainer","barcodeButton","StyleSheet","create","backgroundColor","modalContent","display","alignItems","justifyContent","borderColor","borderWidth","flexDirection","marginBottom","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StatusBar } from \"expo-status-bar\";\nimport { useEffect, useState } from \"react\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport Constants from \"expo-constants\";\nimport * as Permissions from \"expo-permissions\";\nimport { StyleSheet, Text, Button, Image, View } from \"react-native\";\nimport Modal from \"react-native-modal\";\nimport ProductsList from \"../ProductsList\";\nimport { PostBarcode } from '../../lib/api';\nimport Spinner from \"react-native-loading-spinner-overlay\";\nimport Navbar from \"../Navbar/navbar\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nconst MainPage = () => {\nconst [image, setImage] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [spinner, setSpinner] = useState(false);\n\n  const [productsData, setProductsData] = useState([]);\n\n  useEffect(() => {\n    getPermissionAsync();\n  }, []);\n\n  const getPermissionAsync = async () => {\n    if (Constants.platform.ios) {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== \"granted\") {\n        alert(\"Sorry, we need camera roll permissions to make this work!\");\n      }\n    }\n  };\n\n  const productOne = {\n    \"barcode\": 78742432885,\n  }\n  const productTwo = {\n    \"barcode\": 36800318526,\n  }\n  const productThree = {\n    \"barcode\": 76983400182,\n  }\n  // const testApi = () => {\n  //   const example = {\n  //     \"barcode\": 234362,\n  //     \"brand\": \"nesle\",\n  //     \"name\": \"chocolate milk\",\n  //     \"description\": \"very tasty\"\n  //   }\n  //   PostBarcode(example);\n  // }\n  const _pickImage = async () => {\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1,\n      });\n      if (!result.cancelled) {\n        setImage(result.uri);\n        PostBarcode(productThree)\n        .then((res) => {\n          console.log(res.data);\n          setProductsData(res.data);\n        })\n        .catch((err) => console.log(\"There was a problem sending the product data\", err));\n\n        toggleModal();\n      }\n\n      console.log(result);\n    } catch (E) {\n      console.log(E);\n    }\n  };\n\n  const toggleModal = () => {\n    setIsModalVisible(!isModalVisible);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Navbar />\n      <StatusBar style=\"auto\" />\n      <Modal isVisible={isModalVisible}>\n        <View style={{ flex: 1 }}>\n          <Spinner\n            visible={spinner}\n            textContent={\"Loading healthier products:)\"}\n            textStyle={styles.spinnerTextStyle}\n          />\n          <ProductsList productsData={productsData}/>\n          <Button color=\"white\" title=\"X\" onPress={toggleModal} />\n        </View>\n      </Modal>\n      <View style={styles.scanningContainer}>\n        {image && (\n          <Image source={{ uri: image }} style={{ width: 200, height: 200, borderRadius: 10 }} />\n        )}\n        {!image && (<Ionicons name=\"ios-qr-scanner\" color=\"#89db9b\" size={200} />)}\n        <View style={styles.barcodeOuterContainer}>\n        <View style={styles.barcodeContainer}>\n          <Ionicons\n          // onPress={testApi}\n            onPress={_pickImage}\n            style={styles.barcodeButton}\n            name=\"ios-barcode\"\n            size={50}\n            color=\"#14aa6b\"\n          />\n        </View>\n        </View>\n      </View>\n    </View>\n  );\n}\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: \"#fff\",\n    },\n    modalContent: {\n      backgroundColor: \"white\",\n      height: \"90%\",\n    },\n    barcodeContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      backgroundColor: \"#89db9b\",\n      borderColor: \"white\",\n      borderWidth: 1,\n      borderRadius: 20,\n      width: 80,\n      height: 80,\n    },\n    modalContent: {\n      backgroundColor: 'blue',\n      height: '90%'\n    },\n    scanningContainer: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'space-around',\n      flex: 1,\n      marginBottom: 20,\n      marginTop: 50,\n    },\n  });\n  \n \nexport default MainPage;"]},"metadata":{},"sourceType":"module"}